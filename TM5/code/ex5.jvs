void main() {
    int tableSize = readInt("Enter table size (> 2): ");
    while (tableSize < 2) {
        tableSize = readInt("Enter table size (> 2): ");
    }

    boolean[][] table = new boolean[tableSize][tableSize];

    for (int i = 0; i < tableSize; i++) {
        for (int j = 0; j < tableSize; j++) {
            int randomNum = random(0, 2);
            if (randomNum == 0) {
                table[i][j] = true;
            } else {
                table[i][j] = false;
            }
        }
    }

    int x = readInt("Enter x (0-" + (tableSize - 2) + "): ");
    while (x < 0 || x >= tableSize - 1) {
        x = readInt("Enter x (0-" + (tableSize - 2) + "): ");
    }

    int y = readInt("Enter y (0-" + (tableSize - 2) + "): ");
    while (y < 0 || y >= tableSize - 1) {
        y = readInt("Enter y (0-" + (tableSize - 2) + "): ");
    }

    displaySquareAtCoords(table, x, y, 2);
    sleep(1000);
    displayAllSquares(table, readInt("Size of squares to display: "), 500);
}

void displaySquareAtCoords(boolean[][] table, int x, int y, int size) {
    println("Square at (" + x + ", " + y + "):");
    println("");

    // Display O if true, space if false
    for (int i = x; i < x + size; i++) {
        for (int j = y; j < y + size; j++) {
            if (table[i][j] == true) {
                print("O");
            } else {
                print(" ");
            }
        }
        println();
    }
}

void displayAllSquares(boolean[][] table, int size, int waitTime) {
    for (int i = 0; i < table.length - size + 1; i++) {
        for (int j = 0; j < table.length - size + 1; j++) {
            clear();

            println("All squares of size " + size + ":");
            println("");

            displaySquareAtCoords(table, i, j, size);
            sleep(waitTime);
        }
    }
}
